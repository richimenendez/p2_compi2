
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftCOMArightASKleftBLEFTBRIGHTleftBXORleftORBORleftANDBANDleftMAYORMENORDIGUALDESIGUALMAYORIGUALMENORIGUALleftRESTASUMAleftDIVMULTIPORCENTAJErightNOTBNOTsizeofAND ASK BAND BLEFT BNOT BOR BRIGHT BXOR COMA DECRE DERCOR DERLLAVE DERPAR DESIGUAL DIGUAL DIV DOUBLE DP FLECHA ID IGUAL INCE INTEGER IZQCOR IZQLLAVE IZQPAR MAYOR MAYORIGUAL MENOR MENORIGUAL MULTI NOT OR PCOMA PORCENTAJE PUNTO RESTA STR SUMA SXOR VAR abs array break case char default do double else exit float for goto if int main printf return scanf sizeof struct switch unset void while xors    : lbody lbody : lbody body\n              | body\n    body : TYPE ID IZQPAR lpam DERPAR IZQCOR linst DERCOR\n    \n    body : TYPE main IZQPAR lpam DERPAR IZQCOR linst DERCOR\n    body : struct ID IZQCOR linst DERCORbody : decla PCOMA\n    linst : linst inst \n          | inst \n    \n    lpam : lparam \n         | \n    \n    lparam : lparam COMA TYPE ident\n         | TYPE ident\n    \n    inst : asig PCOMA\n         | para\n         | si\n         | mientras\n         | cual\n         | call\n         | dow\n         | prin\n         | decla PCOMA\n         | tag\n         | gotot PCOMA\n    call : ident IZQPAR plex DERPAR PCOMA \n        plex : lex \n             | \n    \n        lex : lex COMA exp\n            | exp\n    tag : ident DPgotot : goto identasig : ident lacs IGUAL exp  \n            | ident IGUAL exp  asig : ident lacs INCE  \n            | ident INCE  asig : ident lacs DECRE  \n            | ident DECRE  decla : TYPE ident lacs IGUAL exp  \n             |  TYPE ident IGUAL exp  mientras : while IZQPAR exp DERPAR IZQCOR linst DERCORdow : do IZQCOR linst DERCOR while IZQPAR exp DERPAR PCOMAsi : if IZQPAR exp DERPAR IZQCOR linst DERCOR lelsi els\n          | if IZQPAR exp DERPAR IZQCOR linst DERCOR els\n    lelsi : lelsi elsi\n        |  elsi\n    elsi : else if IZQPAR exp DERPAR IZQCOR linst DERCORels : else IZQCOR linst DERCOR\n        | para : for IZQPAR para1 exp PCOMA para2 DERPAR IZQCOR linst DERCOR\n    para1 : asig PCOMA\n          | decla PCOMA\n    \n    para2 : asig\n          | decla\n          | exp\n    cual : switch IZQPAR exp DERPAR IZQCOR lcase def DERCOR \n    lcase : lcase caso\n        | caso\n    \n    caso : case ID DP linst break PCOMA\n        | case ID DP linst \n    def : default DP linst break PCOMA\n           |prin : printf IZQPAR STR lexpr DERPAR PCOMAprin : printf IZQPAR STR DERPAR PCOMAexp : scanf IZQPAR DERPAR\n        lexpr : lexpr COMA exp\n             | COMA exp\n    \n    ident   :  ID\n    \n        lacs : lacs acs\n             | acs\n    \n        acs : IZQLLAVE exp DERLLAVE\n    \n        acs : PUNTO ID \n    \n    exp : exp     SUMA    exp\n        | exp     RESTA   exp  \n        | exp     MULTI   exp\n        | exp     DIV     exp\n        | exp     PORCENTAJE     exp\n        | exp     DIGUAL     exp\n        | exp     DESIGUAL     exp\n        | exp     MAYOR     exp\n        | exp     MENOR     exp\n        | exp     MAYORIGUAL     exp\n        | exp     MENORIGUAL     exp\n        | exp     AND     exp\n        | exp     OR     exp\n        | exp     BAND     exp\n        | exp     BOR     exp\n        | exp     BXOR     exp\n        | exp     BLEFT    exp\n        | exp     BRIGHT     exp\n        | RESTA   exp\n        | NOT     exp\n        | BNOT    exp \n        | sizeof    exp \n        | IZQPAR exp DERPAR\n    \n    exp : IZQPAR TYPE DERPAR exp\n    \n    exp : exp ASK exp DP exp\n    \n    exp  : DOUBLE\n    exp  : INTEGERexp  : identexp  : ident lacsexp  : STR exp : IZQCOR lex DERCOR\n    TYPE : int\n        | float\n        | char\n        | double\n        | void\n    '
    
_lr_action_items = {'struct':([0,2,3,12,17,104,182,183,],[5,5,-3,-2,-7,-6,-4,-5,]),'int':([0,2,3,12,17,18,19,25,35,47,48,50,51,52,53,54,55,56,58,71,104,105,106,107,108,114,115,119,122,124,162,164,166,182,183,185,186,187,188,193,200,201,206,210,211,217,218,219,220,222,223,224,226,227,228,229,231,232,233,234,235,239,244,245,246,],[7,7,-3,-2,-7,7,7,7,7,7,-9,-15,-16,-17,-18,-19,-20,-21,-23,7,-6,-8,-14,-22,-24,-30,7,7,7,7,7,7,7,-4,-5,-25,7,7,7,-63,7,7,-62,-48,-40,7,-48,-43,-45,-55,7,7,7,-42,-44,7,7,7,-41,-49,7,-47,7,7,-46,]),'float':([0,2,3,12,17,18,19,25,35,47,48,50,51,52,53,54,55,56,58,71,104,105,106,107,108,114,115,119,122,124,162,164,166,182,183,185,186,187,188,193,200,201,206,210,211,217,218,219,220,222,223,224,226,227,228,229,231,232,233,234,235,239,244,245,246,],[8,8,-3,-2,-7,8,8,8,8,8,-9,-15,-16,-17,-18,-19,-20,-21,-23,8,-6,-8,-14,-22,-24,-30,8,8,8,8,8,8,8,-4,-5,-25,8,8,8,-63,8,8,-62,-48,-40,8,-48,-43,-45,-55,8,8,8,-42,-44,8,8,8,-41,-49,8,-47,8,8,-46,]),'char':([0,2,3,12,17,18,19,25,35,47,48,50,51,52,53,54,55,56,58,71,104,105,106,107,108,114,115,119,122,124,162,164,166,182,183,185,186,187,188,193,200,201,206,210,211,217,218,219,220,222,223,224,226,227,228,229,231,232,233,234,235,239,244,245,246,],[9,9,-3,-2,-7,9,9,9,9,9,-9,-15,-16,-17,-18,-19,-20,-21,-23,9,-6,-8,-14,-22,-24,-30,9,9,9,9,9,9,9,-4,-5,-25,9,9,9,-63,9,9,-62,-48,-40,9,-48,-43,-45,-55,9,9,9,-42,-44,9,9,9,-41,-49,9,-47,9,9,-46,]),'double':([0,2,3,12,17,18,19,25,35,47,48,50,51,52,53,54,55,56,58,71,104,105,106,107,108,114,115,119,122,124,162,164,166,182,183,185,186,187,188,193,200,201,206,210,211,217,218,219,220,222,223,224,226,227,228,229,231,232,233,234,235,239,244,245,246,],[10,10,-3,-2,-7,10,10,10,10,10,-9,-15,-16,-17,-18,-19,-20,-21,-23,10,-6,-8,-14,-22,-24,-30,10,10,10,10,10,10,10,-4,-5,-25,10,10,10,-63,10,10,-62,-48,-40,10,-48,-43,-45,-55,10,10,10,-42,-44,10,10,10,-41,-49,10,-47,10,10,-46,]),'void':([0,2,3,12,17,18,19,25,35,47,48,50,51,52,53,54,55,56,58,71,104,105,106,107,108,114,115,119,122,124,162,164,166,182,183,185,186,187,188,193,200,201,206,210,211,217,218,219,220,222,223,224,226,227,228,229,231,232,233,234,235,239,244,245,246,],[11,11,-3,-2,-7,11,11,11,11,11,-9,-15,-16,-17,-18,-19,-20,-21,-23,11,-6,-8,-14,-22,-24,-30,11,11,11,11,11,11,11,-4,-5,-25,11,11,11,-63,11,11,-62,-48,-40,11,-48,-43,-45,-55,11,11,11,-42,-44,11,11,11,-41,-49,11,-47,11,11,-46,]),'$end':([1,2,3,12,17,104,182,183,],[0,-1,-3,-2,-7,-6,-4,-5,]),'ID':([4,5,7,8,9,10,11,21,23,24,25,26,30,35,36,37,38,39,43,47,48,50,51,52,53,54,55,56,58,67,68,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,105,106,107,108,110,113,114,115,116,117,118,119,122,123,124,146,148,149,155,162,164,166,167,173,174,181,185,186,187,188,192,193,200,201,204,205,206,210,211,217,218,219,220,222,223,224,226,227,228,229,231,232,233,234,235,236,239,244,245,246,],[13,16,-103,-104,-105,-106,-107,44,44,46,44,44,44,44,44,44,44,44,44,44,-9,-15,-16,-17,-18,-19,-20,-21,-23,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,-8,-14,-22,-24,44,44,-30,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,-50,-51,44,-25,44,44,44,44,-63,44,44,215,44,-62,-48,-40,44,-48,-43,-45,-55,44,44,44,-42,-44,44,44,44,-41,-49,44,44,-47,44,44,-46,]),'main':([4,7,8,9,10,11,],[14,-103,-104,-105,-106,-107,]),'PCOMA':([6,22,31,32,33,40,41,42,44,46,49,57,59,73,74,97,98,99,100,103,111,112,121,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,144,145,147,150,151,152,156,157,168,170,171,172,180,184,191,225,237,238,],[17,-69,-68,-99,-39,-97,-98,-101,-67,-71,106,107,108,-38,-100,-90,-91,-92,-93,-70,-35,-37,-31,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-64,-94,-102,-34,-36,-33,173,174,-95,-32,185,186,193,-96,206,233,241,242,]),'DERPAR':([7,8,9,10,11,18,19,22,27,28,29,31,32,33,40,41,42,44,46,69,73,74,94,95,96,97,98,99,100,102,103,111,112,113,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,144,145,147,150,151,152,153,154,159,160,161,163,165,168,169,170,179,184,194,195,196,197,198,199,207,209,216,240,],[-103,-104,-105,-106,-107,-11,-11,-69,70,-10,72,-68,-99,-39,-97,-98,-101,-67,-71,-13,-38,-100,144,145,146,-90,-91,-92,-93,-29,-70,-35,-37,-27,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-64,-94,-102,-34,-36,-33,171,-26,175,176,177,180,-12,-95,-28,-32,191,-96,-66,-54,208,-52,-53,-99,-65,-100,225,243,]),'IZQPAR':([13,14,21,23,30,34,35,36,37,38,39,43,44,60,61,62,63,64,66,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,110,113,116,117,118,146,148,149,155,167,173,174,181,186,190,192,205,230,236,],[18,19,35,35,35,94,35,35,35,35,35,35,-67,113,115,116,117,118,120,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,-50,-51,35,35,205,35,35,236,35,]),'IGUAL':([13,15,20,22,31,44,46,60,103,109,158,199,209,],[-67,21,30,-69,-68,-67,-71,110,-70,149,110,110,149,]),'IZQLLAVE':([13,15,20,22,31,32,44,46,60,74,103,109,158,199,209,],[-67,23,23,-69,-68,23,-67,-71,23,23,-70,23,23,23,23,]),'PUNTO':([13,15,20,22,31,32,44,46,60,74,103,109,158,199,209,],[-67,24,24,-69,-68,24,-67,-71,24,24,-70,24,24,24,24,]),'IZQCOR':([16,21,23,30,35,36,37,38,39,43,65,70,72,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,110,113,116,117,118,146,148,149,155,167,173,174,175,176,177,181,186,192,205,208,221,236,243,],[25,43,43,43,43,43,43,43,43,43,119,122,124,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,-50,-51,187,188,189,43,43,43,43,217,229,43,244,]),'scanf':([21,23,30,35,36,37,38,39,43,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,110,113,116,117,118,146,148,149,155,167,173,174,181,186,192,205,236,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,-50,-51,34,34,34,34,34,]),'RESTA':([21,22,23,30,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,95,97,98,99,100,102,103,110,113,116,117,118,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,152,155,159,160,161,167,168,169,170,172,173,174,181,184,186,192,194,195,199,205,207,209,216,236,240,],[36,-69,36,36,-68,-99,76,36,36,36,36,36,-97,-98,-101,36,-67,76,-71,76,-100,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,76,-90,-91,-92,-93,76,-70,36,36,36,36,36,-72,-73,-74,-75,-76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,-64,-94,36,-102,36,36,76,36,76,76,76,36,76,76,76,76,-50,-51,36,76,36,36,76,76,-99,36,76,-100,76,36,76,]),'NOT':([21,23,30,35,36,37,38,39,43,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,110,113,116,117,118,146,148,149,155,167,173,174,181,186,192,205,236,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,-50,-51,37,37,37,37,37,]),'BNOT':([21,23,30,35,36,37,38,39,43,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,110,113,116,117,118,146,148,149,155,167,173,174,181,186,192,205,236,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,-50,-51,38,38,38,38,38,]),'sizeof':([21,23,30,35,36,37,38,39,43,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,110,113,116,117,118,146,148,149,155,167,173,174,181,186,192,205,236,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,-50,-51,39,39,39,39,39,]),'DOUBLE':([21,23,30,35,36,37,38,39,43,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,110,113,116,117,118,146,148,149,155,167,173,174,181,186,192,205,236,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,-50,-51,40,40,40,40,40,]),'INTEGER':([21,23,30,35,36,37,38,39,43,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,110,113,116,117,118,146,148,149,155,167,173,174,181,186,192,205,236,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,-50,-51,41,41,41,41,41,]),'STR':([21,23,30,35,36,37,38,39,43,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,110,113,116,117,118,120,146,148,149,155,167,173,174,181,186,192,205,236,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,163,42,42,42,42,42,-50,-51,42,42,42,42,42,]),'SUMA':([22,31,32,33,40,41,42,44,45,46,73,74,95,97,98,99,100,102,103,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,147,152,159,160,161,168,169,170,172,184,194,195,199,207,209,216,240,],[-69,-68,-99,75,-97,-98,-101,-67,75,-71,75,-100,75,-90,-91,-92,-93,75,-70,-72,-73,-74,-75,-76,75,75,75,75,75,75,75,75,75,75,75,75,75,75,-64,-94,-102,75,75,75,75,75,75,75,75,75,75,75,-99,75,-100,75,75,]),'MULTI':([22,31,32,33,40,41,42,44,45,46,73,74,95,97,98,99,100,102,103,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,147,152,159,160,161,168,169,170,172,184,194,195,199,207,209,216,240,],[-69,-68,-99,77,-97,-98,-101,-67,77,-71,77,-100,77,77,-91,-92,-93,77,-70,77,77,-74,-75,-76,77,77,77,77,77,77,77,77,77,77,77,77,77,77,-64,-94,-102,77,77,77,77,77,77,77,77,77,77,77,-99,77,-100,77,77,]),'DIV':([22,31,32,33,40,41,42,44,45,46,73,74,95,97,98,99,100,102,103,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,147,152,159,160,161,168,169,170,172,184,194,195,199,207,209,216,240,],[-69,-68,-99,78,-97,-98,-101,-67,78,-71,78,-100,78,78,-91,-92,-93,78,-70,78,78,-74,-75,-76,78,78,78,78,78,78,78,78,78,78,78,78,78,78,-64,-94,-102,78,78,78,78,78,78,78,78,78,78,78,-99,78,-100,78,78,]),'PORCENTAJE':([22,31,32,33,40,41,42,44,45,46,73,74,95,97,98,99,100,102,103,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,147,152,159,160,161,168,169,170,172,184,194,195,199,207,209,216,240,],[-69,-68,-99,79,-97,-98,-101,-67,79,-71,79,-100,79,79,-91,-92,-93,79,-70,79,79,-74,-75,-76,79,79,79,79,79,79,79,79,79,79,79,79,79,79,-64,-94,-102,79,79,79,79,79,79,79,79,79,79,79,-99,79,-100,79,79,]),'DIGUAL':([22,31,32,33,40,41,42,44,45,46,73,74,95,97,98,99,100,102,103,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,147,152,159,160,161,168,169,170,172,184,194,195,199,207,209,216,240,],[-69,-68,-99,80,-97,-98,-101,-67,80,-71,80,-100,80,-90,-91,-92,-93,80,-70,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,80,80,80,80,80,80,80,80,-64,-94,-102,80,80,80,80,80,80,80,80,80,80,80,-99,80,-100,80,80,]),'DESIGUAL':([22,31,32,33,40,41,42,44,45,46,73,74,95,97,98,99,100,102,103,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,147,152,159,160,161,168,169,170,172,184,194,195,199,207,209,216,240,],[-69,-68,-99,81,-97,-98,-101,-67,81,-71,81,-100,81,-90,-91,-92,-93,81,-70,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,81,81,81,81,81,81,81,81,-64,-94,-102,81,81,81,81,81,81,81,81,81,81,81,-99,81,-100,81,81,]),'MAYOR':([22,31,32,33,40,41,42,44,45,46,73,74,95,97,98,99,100,102,103,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,147,152,159,160,161,168,169,170,172,184,194,195,199,207,209,216,240,],[-69,-68,-99,82,-97,-98,-101,-67,82,-71,82,-100,82,-90,-91,-92,-93,82,-70,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,82,82,82,82,82,82,82,82,-64,-94,-102,82,82,82,82,82,82,82,82,82,82,82,-99,82,-100,82,82,]),'MENOR':([22,31,32,33,40,41,42,44,45,46,73,74,95,97,98,99,100,102,103,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,147,152,159,160,161,168,169,170,172,184,194,195,199,207,209,216,240,],[-69,-68,-99,83,-97,-98,-101,-67,83,-71,83,-100,83,-90,-91,-92,-93,83,-70,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,83,83,83,83,83,83,83,83,-64,-94,-102,83,83,83,83,83,83,83,83,83,83,83,-99,83,-100,83,83,]),'MAYORIGUAL':([22,31,32,33,40,41,42,44,45,46,73,74,95,97,98,99,100,102,103,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,147,152,159,160,161,168,169,170,172,184,194,195,199,207,209,216,240,],[-69,-68,-99,84,-97,-98,-101,-67,84,-71,84,-100,84,-90,-91,-92,-93,84,-70,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,84,84,84,84,84,84,84,84,-64,-94,-102,84,84,84,84,84,84,84,84,84,84,84,-99,84,-100,84,84,]),'MENORIGUAL':([22,31,32,33,40,41,42,44,45,46,73,74,95,97,98,99,100,102,103,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,147,152,159,160,161,168,169,170,172,184,194,195,199,207,209,216,240,],[-69,-68,-99,85,-97,-98,-101,-67,85,-71,85,-100,85,-90,-91,-92,-93,85,-70,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,85,85,85,85,85,85,85,85,-64,-94,-102,85,85,85,85,85,85,85,85,85,85,85,-99,85,-100,85,85,]),'AND':([22,31,32,33,40,41,42,44,45,46,73,74,95,97,98,99,100,102,103,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,147,152,159,160,161,168,169,170,172,184,194,195,199,207,209,216,240,],[-69,-68,-99,86,-97,-98,-101,-67,86,-71,86,-100,86,-90,-91,-92,-93,86,-70,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,86,-85,86,86,86,86,86,-64,-94,-102,86,86,86,86,86,86,86,86,86,86,86,-99,86,-100,86,86,]),'OR':([22,31,32,33,40,41,42,44,45,46,73,74,95,97,98,99,100,102,103,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,147,152,159,160,161,168,169,170,172,184,194,195,199,207,209,216,240,],[-69,-68,-99,87,-97,-98,-101,-67,87,-71,87,-100,87,-90,-91,-92,-93,87,-70,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,87,87,87,87,-64,-94,-102,87,87,87,87,87,87,87,87,87,87,87,-99,87,-100,87,87,]),'BAND':([22,31,32,33,40,41,42,44,45,46,73,74,95,97,98,99,100,102,103,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,147,152,159,160,161,168,169,170,172,184,194,195,199,207,209,216,240,],[-69,-68,-99,88,-97,-98,-101,-67,88,-71,88,-100,88,-90,-91,-92,-93,88,-70,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,88,-85,88,88,88,88,88,-64,-94,-102,88,88,88,88,88,88,88,88,88,88,88,-99,88,-100,88,88,]),'BOR':([22,31,32,33,40,41,42,44,45,46,73,74,95,97,98,99,100,102,103,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,147,152,159,160,161,168,169,170,172,184,194,195,199,207,209,216,240,],[-69,-68,-99,89,-97,-98,-101,-67,89,-71,89,-100,89,-90,-91,-92,-93,89,-70,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,89,89,89,89,-64,-94,-102,89,89,89,89,89,89,89,89,89,89,89,-99,89,-100,89,89,]),'BXOR':([22,31,32,33,40,41,42,44,45,46,73,74,95,97,98,99,100,102,103,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,147,152,159,160,161,168,169,170,172,184,194,195,199,207,209,216,240,],[-69,-68,-99,90,-97,-98,-101,-67,90,-71,90,-100,90,-90,-91,-92,-93,90,-70,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,90,90,90,-64,-94,-102,90,90,90,90,90,90,90,90,90,90,90,-99,90,-100,90,90,]),'BLEFT':([22,31,32,33,40,41,42,44,45,46,73,74,95,97,98,99,100,102,103,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,147,152,159,160,161,168,169,170,172,184,194,195,199,207,209,216,240,],[-69,-68,-99,91,-97,-98,-101,-67,91,-71,91,-100,91,-90,-91,-92,-93,91,-70,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,91,-64,-94,-102,91,91,91,91,91,91,91,91,91,91,91,-99,91,-100,91,91,]),'BRIGHT':([22,31,32,33,40,41,42,44,45,46,73,74,95,97,98,99,100,102,103,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,147,152,159,160,161,168,169,170,172,184,194,195,199,207,209,216,240,],[-69,-68,-99,92,-97,-98,-101,-67,92,-71,92,-100,92,-90,-91,-92,-93,92,-70,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,92,-64,-94,-102,92,92,92,92,92,92,92,92,92,92,92,-99,92,-100,92,92,]),'ASK':([22,31,32,33,40,41,42,44,45,46,73,74,95,97,98,99,100,102,103,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,147,152,159,160,161,168,169,170,172,184,194,195,199,207,209,216,240,],[-69,-68,-99,93,-97,-98,-101,-67,93,-71,93,-100,93,-90,-91,-92,-93,93,-70,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,93,-64,-94,-102,93,93,93,93,93,93,93,93,93,93,93,-99,93,-100,93,93,]),'DERLLAVE':([22,31,32,40,41,42,44,45,46,74,97,98,99,100,103,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,144,145,147,168,184,],[-69,-68,-99,-97,-98,-101,-67,103,-71,-100,-90,-91,-92,-93,-70,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-64,-94,-102,-95,-96,]),'DERCOR':([22,31,32,40,41,42,44,46,47,48,50,51,52,53,54,55,56,58,74,97,98,99,100,101,102,103,105,106,107,108,114,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,144,145,147,162,164,166,168,169,184,185,193,200,201,202,203,206,210,211,212,213,218,219,220,222,226,227,228,232,233,234,235,239,241,242,245,246,],[-69,-68,-99,-97,-98,-101,-67,-71,104,-9,-15,-16,-17,-18,-19,-20,-21,-23,-100,-90,-91,-92,-93,147,-29,-70,-8,-14,-22,-24,-30,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-64,-94,-102,178,182,183,-95,-28,-96,-25,-63,210,211,-61,-57,-62,-48,-40,222,-56,-48,-43,-45,-55,234,-42,-44,-59,-41,-49,239,-47,-60,-58,246,-46,]),'COMA':([22,28,31,32,40,41,42,44,46,69,74,97,98,99,100,101,102,103,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,144,145,147,154,163,165,168,169,179,184,194,207,],[-69,71,-68,-99,-97,-98,-101,-67,-71,-13,-100,-90,-91,-92,-93,148,-29,-70,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-64,-94,-102,148,181,-12,-95,-28,192,-96,-66,-65,]),'DP':([22,31,32,40,41,42,44,46,60,74,97,98,99,100,103,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,147,168,184,214,215,],[-69,-68,-99,-97,-98,-101,-67,-71,114,-100,-90,-91,-92,-93,-70,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,167,-64,-94,-102,-95,-96,223,224,]),'INCE':([22,31,44,46,60,103,109,158,199,209,],[-69,-68,-67,-71,111,-70,150,111,111,150,]),'DECRE':([22,31,44,46,60,103,109,158,199,209,],[-69,-68,-67,-71,112,-70,151,112,112,151,]),'for':([25,47,48,50,51,52,53,54,55,56,58,105,106,107,108,114,119,122,124,162,164,166,185,187,188,193,200,201,206,210,211,217,218,219,220,222,223,224,226,227,228,229,231,232,233,234,235,239,244,245,246,],[61,61,-9,-15,-16,-17,-18,-19,-20,-21,-23,-8,-14,-22,-24,-30,61,61,61,61,61,61,-25,61,61,-63,61,61,-62,-48,-40,61,-48,-43,-45,-55,61,61,61,-42,-44,61,61,61,-41,-49,61,-47,61,61,-46,]),'if':([25,47,48,50,51,52,53,54,55,56,58,105,106,107,108,114,119,122,124,162,164,166,185,187,188,193,200,201,206,210,211,217,218,219,220,221,222,223,224,226,227,228,229,231,232,233,234,235,239,244,245,246,],[62,62,-9,-15,-16,-17,-18,-19,-20,-21,-23,-8,-14,-22,-24,-30,62,62,62,62,62,62,-25,62,62,-63,62,62,-62,-48,-40,62,-48,-43,-45,230,-55,62,62,62,-42,-44,62,62,62,-41,-49,62,-47,62,62,-46,]),'while':([25,47,48,50,51,52,53,54,55,56,58,105,106,107,108,114,119,122,124,162,164,166,178,185,187,188,193,200,201,206,210,211,217,218,219,220,222,223,224,226,227,228,229,231,232,233,234,235,239,244,245,246,],[63,63,-9,-15,-16,-17,-18,-19,-20,-21,-23,-8,-14,-22,-24,-30,63,63,63,63,63,63,190,-25,63,63,-63,63,63,-62,-48,-40,63,-48,-43,-45,-55,63,63,63,-42,-44,63,63,63,-41,-49,63,-47,63,63,-46,]),'switch':([25,47,48,50,51,52,53,54,55,56,58,105,106,107,108,114,119,122,124,162,164,166,185,187,188,193,200,201,206,210,211,217,218,219,220,222,223,224,226,227,228,229,231,232,233,234,235,239,244,245,246,],[64,64,-9,-15,-16,-17,-18,-19,-20,-21,-23,-8,-14,-22,-24,-30,64,64,64,64,64,64,-25,64,64,-63,64,64,-62,-48,-40,64,-48,-43,-45,-55,64,64,64,-42,-44,64,64,64,-41,-49,64,-47,64,64,-46,]),'do':([25,47,48,50,51,52,53,54,55,56,58,105,106,107,108,114,119,122,124,162,164,166,185,187,188,193,200,201,206,210,211,217,218,219,220,222,223,224,226,227,228,229,231,232,233,234,235,239,244,245,246,],[65,65,-9,-15,-16,-17,-18,-19,-20,-21,-23,-8,-14,-22,-24,-30,65,65,65,65,65,65,-25,65,65,-63,65,65,-62,-48,-40,65,-48,-43,-45,-55,65,65,65,-42,-44,65,65,65,-41,-49,65,-47,65,65,-46,]),'printf':([25,47,48,50,51,52,53,54,55,56,58,105,106,107,108,114,119,122,124,162,164,166,185,187,188,193,200,201,206,210,211,217,218,219,220,222,223,224,226,227,228,229,231,232,233,234,235,239,244,245,246,],[66,66,-9,-15,-16,-17,-18,-19,-20,-21,-23,-8,-14,-22,-24,-30,66,66,66,66,66,66,-25,66,66,-63,66,66,-62,-48,-40,66,-48,-43,-45,-55,66,66,66,-42,-44,66,66,66,-41,-49,66,-47,66,66,-46,]),'goto':([25,47,48,50,51,52,53,54,55,56,58,105,106,107,108,114,119,122,124,162,164,166,185,187,188,193,200,201,206,210,211,217,218,219,220,222,223,224,226,227,228,229,231,232,233,234,235,239,244,245,246,],[68,68,-9,-15,-16,-17,-18,-19,-20,-21,-23,-8,-14,-22,-24,-30,68,68,68,68,68,68,-25,68,68,-63,68,68,-62,-48,-40,68,-48,-43,-45,-55,68,68,68,-42,-44,68,68,68,-41,-49,68,-47,68,68,-46,]),'break':([48,50,51,52,53,54,55,56,58,105,106,107,108,114,185,193,206,210,211,218,219,220,222,227,228,231,232,233,234,239,246,],[-9,-15,-16,-17,-18,-19,-20,-21,-23,-8,-14,-22,-24,-30,-25,-63,-62,-48,-40,-48,-43,-45,-55,-42,-44,237,238,-41,-49,-47,-46,]),'default':([48,50,51,52,53,54,55,56,58,105,106,107,108,114,185,193,202,203,206,210,211,213,218,219,220,222,227,228,232,233,234,239,242,246,],[-9,-15,-16,-17,-18,-19,-20,-21,-23,-8,-14,-22,-24,-30,-25,-63,214,-57,-62,-48,-40,-56,-48,-43,-45,-55,-42,-44,-59,-41,-49,-47,-58,-46,]),'case':([48,50,51,52,53,54,55,56,58,105,106,107,108,114,185,189,193,202,203,206,210,211,213,218,219,220,222,227,228,232,233,234,239,242,246,],[-9,-15,-16,-17,-18,-19,-20,-21,-23,-8,-14,-22,-24,-30,-25,204,-63,204,-57,-62,-48,-40,-56,-48,-43,-45,-55,-42,-44,-59,-41,-49,-47,-58,-46,]),'else':([210,218,220,228,246,],[221,221,-45,-44,-46,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'s':([0,],[1,]),'lbody':([0,],[2,]),'body':([0,2,],[3,12,]),'TYPE':([0,2,18,19,25,35,47,71,115,119,122,124,162,164,166,186,187,188,200,201,217,223,224,226,229,231,232,235,244,245,],[4,4,26,26,67,96,67,123,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'decla':([0,2,25,47,115,119,122,124,162,164,166,186,187,188,200,201,217,223,224,226,229,231,232,235,244,245,],[6,6,57,57,157,57,57,57,57,57,57,198,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'ident':([4,21,23,25,26,30,35,36,37,38,39,43,47,67,68,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,110,113,115,116,117,118,119,122,123,124,146,148,149,155,162,164,166,167,181,186,187,188,192,200,201,205,217,223,224,226,229,231,232,235,236,244,245,],[15,32,32,60,69,32,32,32,32,32,32,32,60,15,121,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,158,32,32,32,60,60,165,60,32,32,32,32,60,60,60,32,32,199,60,60,32,60,60,32,60,60,60,60,60,60,60,60,32,60,60,]),'lacs':([15,32,60,158,199,],[20,74,109,109,209,]),'acs':([15,20,32,60,74,109,158,199,209,],[22,31,22,22,31,31,22,22,31,]),'lpam':([18,19,],[27,29,]),'lparam':([18,19,],[28,28,]),'exp':([21,23,30,35,36,37,38,39,43,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,110,113,116,117,118,146,148,149,155,167,181,186,192,205,236,],[33,45,73,95,97,98,99,100,102,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,152,102,159,160,161,168,169,170,172,184,194,195,207,216,240,]),'linst':([25,119,122,124,187,188,217,223,224,229,244,],[47,162,164,166,200,201,226,231,232,235,245,]),'inst':([25,47,119,122,124,162,164,166,187,188,200,201,217,223,224,226,229,231,232,235,244,245,],[48,105,48,48,48,105,105,105,48,48,105,105,48,48,48,105,48,105,105,105,48,105,]),'asig':([25,47,115,119,122,124,162,164,166,186,187,188,200,201,217,223,224,226,229,231,232,235,244,245,],[49,49,156,49,49,49,49,49,49,197,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'para':([25,47,119,122,124,162,164,166,187,188,200,201,217,223,224,226,229,231,232,235,244,245,],[50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'si':([25,47,119,122,124,162,164,166,187,188,200,201,217,223,224,226,229,231,232,235,244,245,],[51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'mientras':([25,47,119,122,124,162,164,166,187,188,200,201,217,223,224,226,229,231,232,235,244,245,],[52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'cual':([25,47,119,122,124,162,164,166,187,188,200,201,217,223,224,226,229,231,232,235,244,245,],[53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'call':([25,47,119,122,124,162,164,166,187,188,200,201,217,223,224,226,229,231,232,235,244,245,],[54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'dow':([25,47,119,122,124,162,164,166,187,188,200,201,217,223,224,226,229,231,232,235,244,245,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'prin':([25,47,119,122,124,162,164,166,187,188,200,201,217,223,224,226,229,231,232,235,244,245,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'tag':([25,47,119,122,124,162,164,166,187,188,200,201,217,223,224,226,229,231,232,235,244,245,],[58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'gotot':([25,47,119,122,124,162,164,166,187,188,200,201,217,223,224,226,229,231,232,235,244,245,],[59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'lex':([43,113,],[101,154,]),'plex':([113,],[153,]),'para1':([115,],[155,]),'lexpr':([163,],[179,]),'para2':([186,],[196,]),'lcase':([189,],[202,]),'caso':([189,202,],[203,213,]),'def':([202,],[212,]),'lelsi':([210,],[218,]),'els':([210,218,],[219,227,]),'elsi':([210,218,],[220,228,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> s","S'",1,None,None,None),
  ('s -> lbody','s',1,'p_s_tag','gramaticaC.py',224),
  ('lbody -> lbody body','lbody',2,'p_lbody','gramaticaC.py',228),
  ('lbody -> body','lbody',1,'p_lbody','gramaticaC.py',229),
  ('body -> TYPE ID IZQPAR lpam DERPAR IZQCOR linst DERCOR','body',8,'p_body','gramaticaC.py',239),
  ('body -> TYPE main IZQPAR lpam DERPAR IZQCOR linst DERCOR','body',8,'p_body2','gramaticaC.py',245),
  ('body -> struct ID IZQCOR linst DERCOR','body',5,'p_body_str','gramaticaC.py',250),
  ('body -> decla PCOMA','body',2,'p_body_decl','gramaticaC.py',254),
  ('linst -> linst inst','linst',2,'p_linst','gramaticaC.py',259),
  ('linst -> inst','linst',1,'p_linst','gramaticaC.py',260),
  ('lpam -> lparam','lpam',1,'p_lpam','gramaticaC.py',272),
  ('lpam -> <empty>','lpam',0,'p_lpam','gramaticaC.py',273),
  ('lparam -> lparam COMA TYPE ident','lparam',4,'p_lparam','gramaticaC.py',282),
  ('lparam -> TYPE ident','lparam',2,'p_lparam','gramaticaC.py',283),
  ('inst -> asig PCOMA','inst',2,'p_inst','gramaticaC.py',300),
  ('inst -> para','inst',1,'p_inst','gramaticaC.py',301),
  ('inst -> si','inst',1,'p_inst','gramaticaC.py',302),
  ('inst -> mientras','inst',1,'p_inst','gramaticaC.py',303),
  ('inst -> cual','inst',1,'p_inst','gramaticaC.py',304),
  ('inst -> call','inst',1,'p_inst','gramaticaC.py',305),
  ('inst -> dow','inst',1,'p_inst','gramaticaC.py',306),
  ('inst -> prin','inst',1,'p_inst','gramaticaC.py',307),
  ('inst -> decla PCOMA','inst',2,'p_inst','gramaticaC.py',308),
  ('inst -> tag','inst',1,'p_inst','gramaticaC.py',309),
  ('inst -> gotot PCOMA','inst',2,'p_inst','gramaticaC.py',310),
  ('call -> ident IZQPAR plex DERPAR PCOMA','call',5,'p_call','gramaticaC.py',315),
  ('plex -> lex','plex',1,'p_plex','gramaticaC.py',321),
  ('plex -> <empty>','plex',0,'p_plex','gramaticaC.py',322),
  ('lex -> lex COMA exp','lex',3,'p_lex','gramaticaC.py',330),
  ('lex -> exp','lex',1,'p_lex','gramaticaC.py',331),
  ('tag -> ident DP','tag',2,'p_tag','gramaticaC.py',341),
  ('gotot -> goto ident','gotot',2,'p_goto','gramaticaC.py',345),
  ('asig -> ident lacs IGUAL exp','asig',4,'p_asig','gramaticaC.py',349),
  ('asig -> ident IGUAL exp','asig',3,'p_asig','gramaticaC.py',350),
  ('asig -> ident lacs INCE','asig',3,'p_asig_Incre','gramaticaC.py',357),
  ('asig -> ident INCE','asig',2,'p_asig_Incre','gramaticaC.py',358),
  ('asig -> ident lacs DECRE','asig',3,'p_asig_decre','gramaticaC.py',365),
  ('asig -> ident DECRE','asig',2,'p_asig_decre','gramaticaC.py',366),
  ('decla -> TYPE ident lacs IGUAL exp','decla',5,'p_declara','gramaticaC.py',373),
  ('decla -> TYPE ident IGUAL exp','decla',4,'p_declara','gramaticaC.py',374),
  ('mientras -> while IZQPAR exp DERPAR IZQCOR linst DERCOR','mientras',7,'p_while','gramaticaC.py',381),
  ('dow -> do IZQCOR linst DERCOR while IZQPAR exp DERPAR PCOMA','dow',9,'p_dow','gramaticaC.py',384),
  ('si -> if IZQPAR exp DERPAR IZQCOR linst DERCOR lelsi els','si',9,'p_if','gramaticaC.py',388),
  ('si -> if IZQPAR exp DERPAR IZQCOR linst DERCOR els','si',8,'p_if','gramaticaC.py',389),
  ('lelsi -> lelsi elsi','lelsi',2,'p_lelif','gramaticaC.py',397),
  ('lelsi -> elsi','lelsi',1,'p_lelif','gramaticaC.py',398),
  ('elsi -> else if IZQPAR exp DERPAR IZQCOR linst DERCOR','elsi',8,'p_elif','gramaticaC.py',408),
  ('els -> else IZQCOR linst DERCOR','els',4,'p_else','gramaticaC.py',411),
  ('els -> <empty>','els',0,'p_else','gramaticaC.py',412),
  ('para -> for IZQPAR para1 exp PCOMA para2 DERPAR IZQCOR linst DERCOR','para',10,'p_for','gramaticaC.py',419),
  ('para1 -> asig PCOMA','para1',2,'p_for1','gramaticaC.py',424),
  ('para1 -> decla PCOMA','para1',2,'p_for1','gramaticaC.py',425),
  ('para2 -> asig','para2',1,'p_for2','gramaticaC.py',432),
  ('para2 -> decla','para2',1,'p_for2','gramaticaC.py',433),
  ('para2 -> exp','para2',1,'p_for2','gramaticaC.py',434),
  ('cual -> switch IZQPAR exp DERPAR IZQCOR lcase def DERCOR','cual',8,'p_switch','gramaticaC.py',441),
  ('lcase -> lcase caso','lcase',2,'p_lcase','gramaticaC.py',445),
  ('lcase -> caso','lcase',1,'p_lcase','gramaticaC.py',446),
  ('caso -> case ID DP linst break PCOMA','caso',6,'p_case','gramaticaC.py',451),
  ('caso -> case ID DP linst','caso',4,'p_case','gramaticaC.py',452),
  ('def -> default DP linst break PCOMA','def',5,'p_def','gramaticaC.py',456),
  ('def -> <empty>','def',0,'p_def','gramaticaC.py',457),
  ('prin -> printf IZQPAR STR lexpr DERPAR PCOMA','prin',6,'p_printf','gramaticaC.py',461),
  ('prin -> printf IZQPAR STR DERPAR PCOMA','prin',5,'p_printf2','gramaticaC.py',465),
  ('exp -> scanf IZQPAR DERPAR','exp',3,'p_readf','gramaticaC.py',469),
  ('lexpr -> lexpr COMA exp','lexpr',3,'p_lexp','gramaticaC.py',474),
  ('lexpr -> COMA exp','lexpr',2,'p_lexp','gramaticaC.py',475),
  ('ident -> ID','ident',1,'p_ids','gramaticaC.py',486),
  ('lacs -> lacs acs','lacs',2,'p_accesos','gramaticaC.py',493),
  ('lacs -> acs','lacs',1,'p_accesos','gramaticaC.py',494),
  ('acs -> IZQLLAVE exp DERLLAVE','acs',3,'p_array','gramaticaC.py',505),
  ('acs -> PUNTO ID','acs',2,'p_access','gramaticaC.py',511),
  ('exp -> exp SUMA exp','exp',3,'p_expresion','gramaticaC.py',519),
  ('exp -> exp RESTA exp','exp',3,'p_expresion','gramaticaC.py',520),
  ('exp -> exp MULTI exp','exp',3,'p_expresion','gramaticaC.py',521),
  ('exp -> exp DIV exp','exp',3,'p_expresion','gramaticaC.py',522),
  ('exp -> exp PORCENTAJE exp','exp',3,'p_expresion','gramaticaC.py',523),
  ('exp -> exp DIGUAL exp','exp',3,'p_expresion','gramaticaC.py',524),
  ('exp -> exp DESIGUAL exp','exp',3,'p_expresion','gramaticaC.py',525),
  ('exp -> exp MAYOR exp','exp',3,'p_expresion','gramaticaC.py',526),
  ('exp -> exp MENOR exp','exp',3,'p_expresion','gramaticaC.py',527),
  ('exp -> exp MAYORIGUAL exp','exp',3,'p_expresion','gramaticaC.py',528),
  ('exp -> exp MENORIGUAL exp','exp',3,'p_expresion','gramaticaC.py',529),
  ('exp -> exp AND exp','exp',3,'p_expresion','gramaticaC.py',530),
  ('exp -> exp OR exp','exp',3,'p_expresion','gramaticaC.py',531),
  ('exp -> exp BAND exp','exp',3,'p_expresion','gramaticaC.py',532),
  ('exp -> exp BOR exp','exp',3,'p_expresion','gramaticaC.py',533),
  ('exp -> exp BXOR exp','exp',3,'p_expresion','gramaticaC.py',534),
  ('exp -> exp BLEFT exp','exp',3,'p_expresion','gramaticaC.py',535),
  ('exp -> exp BRIGHT exp','exp',3,'p_expresion','gramaticaC.py',536),
  ('exp -> RESTA exp','exp',2,'p_expresion','gramaticaC.py',537),
  ('exp -> NOT exp','exp',2,'p_expresion','gramaticaC.py',538),
  ('exp -> BNOT exp','exp',2,'p_expresion','gramaticaC.py',539),
  ('exp -> sizeof exp','exp',2,'p_expresion','gramaticaC.py',540),
  ('exp -> IZQPAR exp DERPAR','exp',3,'p_expresion','gramaticaC.py',541),
  ('exp -> IZQPAR TYPE DERPAR exp','exp',4,'p_cast','gramaticaC.py',588),
  ('exp -> exp ASK exp DP exp','exp',5,'p_ternario','gramaticaC.py',594),
  ('exp -> DOUBLE','exp',1,'p_value_dou','gramaticaC.py',600),
  ('exp -> INTEGER','exp',1,'p_value_ent','gramaticaC.py',605),
  ('exp -> ident','exp',1,'p_value_id','gramaticaC.py',609),
  ('exp -> ident lacs','exp',2,'p_value_id2','gramaticaC.py',613),
  ('exp -> STR','exp',1,'p_value_str','gramaticaC.py',617),
  ('exp -> IZQCOR lex DERCOR','exp',3,'p_valur_arr','gramaticaC.py',621),
  ('TYPE -> int','TYPE',1,'p_type','gramaticaC.py',626),
  ('TYPE -> float','TYPE',1,'p_type','gramaticaC.py',627),
  ('TYPE -> char','TYPE',1,'p_type','gramaticaC.py',628),
  ('TYPE -> double','TYPE',1,'p_type','gramaticaC.py',629),
  ('TYPE -> void','TYPE',1,'p_type','gramaticaC.py',630),
]
