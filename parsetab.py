
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftCOMArightASKleftBLEFTBRIGHTleftBXORleftORBORleftANDBANDleftMAYORMENORDIGUALDESIGUALMAYORIGUALMENORIGUALleftRESTASUMAleftDIVMULTIPORCENTAJErightNOTBNOTsizeofAND ASK BAND BLEFT BNOT BOR BRIGHT BXOR COMA DECRE DERCOR DERLLAVE DERPAR DESIGUAL DIGUAL DIV DOUBLE DP FLECHA ID IGUAL INCE INTEGER IZQCOR IZQLLAVE IZQPAR MAYOR MAYORIGUAL MENOR MENORIGUAL MULTI NOT OR PCOMA PORCENTAJE PUNTO RESTA STR SUMA SXOR VAR abs array break case char default do double else exit float for goto if int main printf return scanf sizeof struct switch unset void while xors    : lbody lbody : lbody body\n              | body\n    body : TYPE ID IZQPAR lpam DERPAR IZQCOR linst DERCOR\n    \n    body : TYPE main IZQPAR lpam DERPAR IZQCOR linst DERCOR\n    body : struct ident IZQCOR linst DERCOR PCOMAbody : decla PCOMA\n    linst : linst inst \n          | inst \n    \n    lpam : lparam \n         | \n    \n    lparam : lparam COMA TYPE ident\n         | TYPE ident\n    \n    inst : asig PCOMA\n         | para\n         | si\n         | mientras\n         | cual\n         | call \n         | dow\n         | asg\n         | prin\n         | decla PCOMA\n         | tag\n         | gotot PCOMA\n         | brk PCOMA\n         | ret PCOMA\n    \n        asg : TYPE lids PCOMA\n    \n    lids : lids COMA ident\n        | ident\n    call : ident IZQPAR plex DERPAR PCOMA brk : breakret : return exp\n            | return\n        plex : lex \n             | \n    \n        lex : lex COMA exp\n            | exp\n    tag : ident DPgotot : goto identasig : ident lacs IGUAL exp  \n            | ident IGUAL exp  asig : ident lacs INCE  \n            | ident INCE  asig : ident lacs DECRE  \n            | ident DECRE  decla : TYPE ident lacs IGUAL exp  \n             |  TYPE ident IGUAL exp  mientras : while IZQPAR exp DERPAR IZQCOR linst DERCORdow : do IZQCOR linst DERCOR while IZQPAR exp DERPAR PCOMAsi : if IZQPAR exp DERPAR IZQCOR linst DERCOR lelsi els\n          | if IZQPAR exp DERPAR IZQCOR linst DERCOR els\n    lelsi : lelsi elsi\n        |  elsi\n    elsi : else if IZQPAR exp DERPAR IZQCOR linst DERCORels : else IZQCOR linst DERCOR\n        | para : for IZQPAR para1 exp PCOMA para2 DERPAR IZQCOR linst DERCOR\n    para1 : asig PCOMA\n          | decla PCOMA\n    \n    para2 : asig\n          | decla\n          | exp\n    cual : switch IZQPAR exp DERPAR IZQCOR lcase def DERCOR \n    lcase : lcase caso\n        | caso\n    \n    caso : case ID DP linst break PCOMA\n        | case ID DP linst \n    def : default DP linst break PCOMA\n           |prin : printf IZQPAR STR lexpr DERPAR PCOMAprin : printf IZQPAR STR DERPAR PCOMAexp : scanf IZQPAR DERPAR\n        lexpr : lexpr COMA exp\n             | COMA exp\n    \n    ident   :  ID\n    \n        lacs : lacs acs\n             | acs\n    \n        acs : IZQLLAVE exp DERLLAVE\n    \n        acs : PUNTO ID \n    \n    exp : exp     SUMA    exp\n        | exp     RESTA   exp  \n        | exp     MULTI   exp\n        | exp     DIV     exp\n        | exp     PORCENTAJE     exp\n        | exp     DIGUAL     exp\n        | exp     DESIGUAL     exp\n        | exp     MAYOR     exp\n        | exp     MENOR     exp\n        | exp     MAYORIGUAL     exp\n        | exp     MENORIGUAL     exp\n        | exp     AND     exp\n        | exp     OR     exp\n        | exp     BAND     exp\n        | exp     BOR     exp\n        | exp     BXOR     exp\n        | exp     BLEFT    exp\n        | exp     BRIGHT     exp\n        | RESTA   exp\n        | NOT     exp\n        | BNOT    exp \n        | sizeof    exp \n        | IZQPAR exp DERPAR\n    \n    exp : IZQPAR TYPE DERPAR exp\n    \n    exp : exp ASK exp DP exp\n    \n    exp  : DOUBLE\n    exp  : INTEGERexp  : identexp  : ident lacsexp  : STR exp : IZQCOR lex DERCOR\n    TYPE : int\n        | float\n        | char\n        | double\n        | void\n    '
    
_lr_action_items = {'struct':([0,2,3,12,18,165,197,198,],[5,5,-3,-2,-7,-6,-4,-5,]),'int':([0,2,3,12,18,19,20,26,36,48,49,51,52,53,54,55,56,57,58,60,76,114,116,117,118,119,120,121,122,126,132,134,165,174,175,178,180,197,198,200,201,202,203,208,215,216,221,225,226,232,233,234,235,237,238,239,241,242,243,244,246,247,248,249,250,254,259,260,261,],[7,7,-3,-2,-7,7,7,7,7,7,-9,-15,-16,-17,-18,-19,-20,-21,-22,-24,7,-39,-8,-14,-23,-25,-26,-27,7,7,7,7,-6,7,-28,7,7,-4,-5,-31,7,7,7,-72,7,7,-71,-57,-49,7,-57,-52,-54,-64,7,7,7,-51,-53,7,7,7,-50,-58,7,-56,7,7,-55,]),'float':([0,2,3,12,18,19,20,26,36,48,49,51,52,53,54,55,56,57,58,60,76,114,116,117,118,119,120,121,122,126,132,134,165,174,175,178,180,197,198,200,201,202,203,208,215,216,221,225,226,232,233,234,235,237,238,239,241,242,243,244,246,247,248,249,250,254,259,260,261,],[8,8,-3,-2,-7,8,8,8,8,8,-9,-15,-16,-17,-18,-19,-20,-21,-22,-24,8,-39,-8,-14,-23,-25,-26,-27,8,8,8,8,-6,8,-28,8,8,-4,-5,-31,8,8,8,-72,8,8,-71,-57,-49,8,-57,-52,-54,-64,8,8,8,-51,-53,8,8,8,-50,-58,8,-56,8,8,-55,]),'char':([0,2,3,12,18,19,20,26,36,48,49,51,52,53,54,55,56,57,58,60,76,114,116,117,118,119,120,121,122,126,132,134,165,174,175,178,180,197,198,200,201,202,203,208,215,216,221,225,226,232,233,234,235,237,238,239,241,242,243,244,246,247,248,249,250,254,259,260,261,],[9,9,-3,-2,-7,9,9,9,9,9,-9,-15,-16,-17,-18,-19,-20,-21,-22,-24,9,-39,-8,-14,-23,-25,-26,-27,9,9,9,9,-6,9,-28,9,9,-4,-5,-31,9,9,9,-72,9,9,-71,-57,-49,9,-57,-52,-54,-64,9,9,9,-51,-53,9,9,9,-50,-58,9,-56,9,9,-55,]),'double':([0,2,3,12,18,19,20,26,36,48,49,51,52,53,54,55,56,57,58,60,76,114,116,117,118,119,120,121,122,126,132,134,165,174,175,178,180,197,198,200,201,202,203,208,215,216,221,225,226,232,233,234,235,237,238,239,241,242,243,244,246,247,248,249,250,254,259,260,261,],[10,10,-3,-2,-7,10,10,10,10,10,-9,-15,-16,-17,-18,-19,-20,-21,-22,-24,10,-39,-8,-14,-23,-25,-26,-27,10,10,10,10,-6,10,-28,10,10,-4,-5,-31,10,10,10,-72,10,10,-71,-57,-49,10,-57,-52,-54,-64,10,10,10,-51,-53,10,10,10,-50,-58,10,-56,10,10,-55,]),'void':([0,2,3,12,18,19,20,26,36,48,49,51,52,53,54,55,56,57,58,60,76,114,116,117,118,119,120,121,122,126,132,134,165,174,175,178,180,197,198,200,201,202,203,208,215,216,221,225,226,232,233,234,235,237,238,239,241,242,243,244,246,247,248,249,250,254,259,260,261,],[11,11,-3,-2,-7,11,11,11,11,11,-9,-15,-16,-17,-18,-19,-20,-21,-22,-24,11,-39,-8,-14,-23,-25,-26,-27,11,11,11,11,-6,11,-28,11,11,-4,-5,-31,11,11,11,-72,11,11,-71,-57,-49,11,-57,-52,-54,-64,11,11,11,-51,-53,11,11,11,-50,-58,11,-56,11,11,-55,]),'$end':([1,2,3,12,18,165,197,198,],[0,-1,-3,-2,-7,-6,-4,-5,]),'ID':([4,5,7,8,9,10,11,22,24,25,26,27,31,36,37,38,39,40,44,48,49,51,52,53,54,55,56,57,58,60,69,71,73,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,110,113,114,116,117,118,119,120,121,122,123,124,125,126,132,133,134,156,158,159,166,170,174,175,176,178,180,181,187,188,196,200,201,202,203,207,208,215,216,219,220,221,225,226,232,233,234,235,237,238,239,241,242,243,244,246,247,248,249,250,251,254,259,260,261,],[13,17,-112,-113,-114,-115,-116,17,17,46,17,17,17,17,17,17,17,17,17,17,-9,-15,-16,-17,-18,-19,-20,-21,-22,-24,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,-39,-8,-14,-23,-25,-26,-27,17,17,17,17,17,17,17,17,17,17,17,17,17,17,-28,17,17,17,17,-59,-60,17,-31,17,17,17,17,-72,17,17,230,17,-71,-57,-49,17,-57,-52,-54,-64,17,17,17,-51,-53,17,17,17,-50,-58,17,17,-56,17,17,-55,]),'main':([4,7,8,9,10,11,],[14,-112,-113,-114,-115,-116,]),'PCOMA':([6,17,23,32,33,34,41,42,43,46,50,59,61,62,63,72,73,78,79,102,103,104,105,108,111,112,115,127,128,130,131,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,154,155,157,160,161,162,167,168,182,184,185,186,193,195,199,206,240,252,253,],[18,-76,-78,-77,-108,-48,-106,-107,-110,-80,117,118,119,120,121,-32,-34,-47,-109,-99,-100,-101,-102,-79,-44,-46,165,175,-30,-40,-33,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-73,-103,-111,-43,-45,-42,187,188,-104,-41,200,201,-29,208,-105,221,248,256,257,]),'DERPAR':([7,8,9,10,11,17,19,20,23,28,29,30,32,33,34,41,42,43,46,74,78,79,99,100,101,102,103,104,105,107,108,111,112,113,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,154,155,157,160,161,162,163,164,171,172,173,177,179,182,183,184,194,199,209,210,211,212,213,214,222,224,231,255,],[-112,-113,-114,-115,-116,-76,-11,-11,-78,75,-10,77,-77,-108,-48,-106,-107,-110,-80,-13,-47,-109,154,155,156,-99,-100,-101,-102,-38,-79,-44,-46,-36,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-73,-103,-111,-43,-45,-42,185,-35,189,190,191,195,-12,-104,-37,-41,206,-105,-75,-63,223,-61,-62,-108,-74,-109,240,258,]),'IZQPAR':([13,14,17,22,24,31,35,36,37,38,39,40,44,47,64,65,66,67,70,73,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,110,113,123,124,125,156,158,159,166,181,187,188,196,201,205,207,220,245,251,],[19,20,-76,36,36,36,99,36,36,36,36,36,36,113,122,123,124,125,129,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,-59,-60,36,36,220,36,36,251,36,]),'IGUAL':([13,15,17,21,23,32,46,47,108,109,128,169,214,224,],[-76,22,-76,31,-78,-77,-80,110,-79,159,22,110,110,159,]),'IZQLLAVE':([13,15,17,21,23,32,33,46,47,79,108,109,128,169,214,224,],[-76,24,-76,24,-78,-77,24,-80,24,24,-79,24,24,24,24,24,]),'PUNTO':([13,15,17,21,23,32,33,46,47,79,108,109,128,169,214,224,],[-76,25,-76,25,-78,-77,25,-80,25,25,-79,25,25,25,25,25,]),'IZQCOR':([16,17,22,24,31,36,37,38,39,40,44,68,73,75,77,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,110,113,123,124,125,156,158,159,166,181,187,188,189,190,191,196,201,207,220,223,236,251,258,],[26,-76,44,44,44,44,44,44,44,44,44,126,44,132,134,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,-59,-60,202,203,204,44,44,44,44,232,244,44,259,]),'SUMA':([17,23,32,33,34,41,42,43,45,46,78,79,100,102,103,104,105,107,108,131,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,157,162,171,172,173,182,183,184,186,199,209,210,214,222,224,231,255,],[-76,-78,-77,-108,80,-106,-107,-110,80,-80,80,-109,80,-99,-100,-101,-102,80,-79,80,-81,-82,-83,-84,-85,80,80,80,80,80,80,80,80,80,80,80,80,80,80,-73,-103,-111,80,80,80,80,80,80,80,80,80,80,80,-108,80,-109,80,80,]),'RESTA':([17,22,23,24,31,32,33,34,36,37,38,39,40,41,42,43,44,45,46,73,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,100,102,103,104,105,107,108,110,113,123,124,125,131,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,162,166,171,172,173,181,182,183,184,186,187,188,196,199,201,207,209,210,214,220,222,224,231,251,255,],[-76,37,-78,37,37,-77,-108,81,37,37,37,37,37,-106,-107,-110,37,81,-80,37,81,-109,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,81,-99,-100,-101,-102,81,-79,37,37,37,37,37,81,-81,-82,-83,-84,-85,81,81,81,81,81,81,81,81,81,81,81,81,81,81,-73,-103,37,-111,37,37,81,37,81,81,81,37,81,81,81,81,-59,-60,37,81,37,37,81,81,-108,37,81,-109,81,37,81,]),'MULTI':([17,23,32,33,34,41,42,43,45,46,78,79,100,102,103,104,105,107,108,131,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,157,162,171,172,173,182,183,184,186,199,209,210,214,222,224,231,255,],[-76,-78,-77,-108,82,-106,-107,-110,82,-80,82,-109,82,82,-100,-101,-102,82,-79,82,82,82,-83,-84,-85,82,82,82,82,82,82,82,82,82,82,82,82,82,82,-73,-103,-111,82,82,82,82,82,82,82,82,82,82,82,-108,82,-109,82,82,]),'DIV':([17,23,32,33,34,41,42,43,45,46,78,79,100,102,103,104,105,107,108,131,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,157,162,171,172,173,182,183,184,186,199,209,210,214,222,224,231,255,],[-76,-78,-77,-108,83,-106,-107,-110,83,-80,83,-109,83,83,-100,-101,-102,83,-79,83,83,83,-83,-84,-85,83,83,83,83,83,83,83,83,83,83,83,83,83,83,-73,-103,-111,83,83,83,83,83,83,83,83,83,83,83,-108,83,-109,83,83,]),'PORCENTAJE':([17,23,32,33,34,41,42,43,45,46,78,79,100,102,103,104,105,107,108,131,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,157,162,171,172,173,182,183,184,186,199,209,210,214,222,224,231,255,],[-76,-78,-77,-108,84,-106,-107,-110,84,-80,84,-109,84,84,-100,-101,-102,84,-79,84,84,84,-83,-84,-85,84,84,84,84,84,84,84,84,84,84,84,84,84,84,-73,-103,-111,84,84,84,84,84,84,84,84,84,84,84,-108,84,-109,84,84,]),'DIGUAL':([17,23,32,33,34,41,42,43,45,46,78,79,100,102,103,104,105,107,108,131,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,157,162,171,172,173,182,183,184,186,199,209,210,214,222,224,231,255,],[-76,-78,-77,-108,85,-106,-107,-110,85,-80,85,-109,85,-99,-100,-101,-102,85,-79,85,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,85,85,85,85,85,85,85,85,-73,-103,-111,85,85,85,85,85,85,85,85,85,85,85,-108,85,-109,85,85,]),'DESIGUAL':([17,23,32,33,34,41,42,43,45,46,78,79,100,102,103,104,105,107,108,131,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,157,162,171,172,173,182,183,184,186,199,209,210,214,222,224,231,255,],[-76,-78,-77,-108,86,-106,-107,-110,86,-80,86,-109,86,-99,-100,-101,-102,86,-79,86,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,86,86,86,86,86,86,86,86,-73,-103,-111,86,86,86,86,86,86,86,86,86,86,86,-108,86,-109,86,86,]),'MAYOR':([17,23,32,33,34,41,42,43,45,46,78,79,100,102,103,104,105,107,108,131,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,157,162,171,172,173,182,183,184,186,199,209,210,214,222,224,231,255,],[-76,-78,-77,-108,87,-106,-107,-110,87,-80,87,-109,87,-99,-100,-101,-102,87,-79,87,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,87,87,87,87,87,87,87,87,-73,-103,-111,87,87,87,87,87,87,87,87,87,87,87,-108,87,-109,87,87,]),'MENOR':([17,23,32,33,34,41,42,43,45,46,78,79,100,102,103,104,105,107,108,131,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,157,162,171,172,173,182,183,184,186,199,209,210,214,222,224,231,255,],[-76,-78,-77,-108,88,-106,-107,-110,88,-80,88,-109,88,-99,-100,-101,-102,88,-79,88,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,88,88,88,88,88,88,88,88,-73,-103,-111,88,88,88,88,88,88,88,88,88,88,88,-108,88,-109,88,88,]),'MAYORIGUAL':([17,23,32,33,34,41,42,43,45,46,78,79,100,102,103,104,105,107,108,131,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,157,162,171,172,173,182,183,184,186,199,209,210,214,222,224,231,255,],[-76,-78,-77,-108,89,-106,-107,-110,89,-80,89,-109,89,-99,-100,-101,-102,89,-79,89,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,89,89,89,89,89,89,89,89,-73,-103,-111,89,89,89,89,89,89,89,89,89,89,89,-108,89,-109,89,89,]),'MENORIGUAL':([17,23,32,33,34,41,42,43,45,46,78,79,100,102,103,104,105,107,108,131,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,157,162,171,172,173,182,183,184,186,199,209,210,214,222,224,231,255,],[-76,-78,-77,-108,90,-106,-107,-110,90,-80,90,-109,90,-99,-100,-101,-102,90,-79,90,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,90,90,90,90,90,90,90,90,-73,-103,-111,90,90,90,90,90,90,90,90,90,90,90,-108,90,-109,90,90,]),'AND':([17,23,32,33,34,41,42,43,45,46,78,79,100,102,103,104,105,107,108,131,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,157,162,171,172,173,182,183,184,186,199,209,210,214,222,224,231,255,],[-76,-78,-77,-108,91,-106,-107,-110,91,-80,91,-109,91,-99,-100,-101,-102,91,-79,91,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,91,-94,91,91,91,91,91,-73,-103,-111,91,91,91,91,91,91,91,91,91,91,91,-108,91,-109,91,91,]),'OR':([17,23,32,33,34,41,42,43,45,46,78,79,100,102,103,104,105,107,108,131,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,157,162,171,172,173,182,183,184,186,199,209,210,214,222,224,231,255,],[-76,-78,-77,-108,92,-106,-107,-110,92,-80,92,-109,92,-99,-100,-101,-102,92,-79,92,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,92,92,92,92,-73,-103,-111,92,92,92,92,92,92,92,92,92,92,92,-108,92,-109,92,92,]),'BAND':([17,23,32,33,34,41,42,43,45,46,78,79,100,102,103,104,105,107,108,131,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,157,162,171,172,173,182,183,184,186,199,209,210,214,222,224,231,255,],[-76,-78,-77,-108,93,-106,-107,-110,93,-80,93,-109,93,-99,-100,-101,-102,93,-79,93,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,93,-94,93,93,93,93,93,-73,-103,-111,93,93,93,93,93,93,93,93,93,93,93,-108,93,-109,93,93,]),'BOR':([17,23,32,33,34,41,42,43,45,46,78,79,100,102,103,104,105,107,108,131,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,157,162,171,172,173,182,183,184,186,199,209,210,214,222,224,231,255,],[-76,-78,-77,-108,94,-106,-107,-110,94,-80,94,-109,94,-99,-100,-101,-102,94,-79,94,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,94,94,94,94,-73,-103,-111,94,94,94,94,94,94,94,94,94,94,94,-108,94,-109,94,94,]),'BXOR':([17,23,32,33,34,41,42,43,45,46,78,79,100,102,103,104,105,107,108,131,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,157,162,171,172,173,182,183,184,186,199,209,210,214,222,224,231,255,],[-76,-78,-77,-108,95,-106,-107,-110,95,-80,95,-109,95,-99,-100,-101,-102,95,-79,95,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,95,95,95,-73,-103,-111,95,95,95,95,95,95,95,95,95,95,95,-108,95,-109,95,95,]),'BLEFT':([17,23,32,33,34,41,42,43,45,46,78,79,100,102,103,104,105,107,108,131,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,157,162,171,172,173,182,183,184,186,199,209,210,214,222,224,231,255,],[-76,-78,-77,-108,96,-106,-107,-110,96,-80,96,-109,96,-99,-100,-101,-102,96,-79,96,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,96,-73,-103,-111,96,96,96,96,96,96,96,96,96,96,96,-108,96,-109,96,96,]),'BRIGHT':([17,23,32,33,34,41,42,43,45,46,78,79,100,102,103,104,105,107,108,131,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,157,162,171,172,173,182,183,184,186,199,209,210,214,222,224,231,255,],[-76,-78,-77,-108,97,-106,-107,-110,97,-80,97,-109,97,-99,-100,-101,-102,97,-79,97,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,97,-73,-103,-111,97,97,97,97,97,97,97,97,97,97,97,-108,97,-109,97,97,]),'ASK':([17,23,32,33,34,41,42,43,45,46,78,79,100,102,103,104,105,107,108,131,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,157,162,171,172,173,182,183,184,186,199,209,210,214,222,224,231,255,],[-76,-78,-77,-108,98,-106,-107,-110,98,-80,98,-109,98,-99,-100,-101,-102,98,-79,98,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,98,-73,-103,-111,98,98,98,98,98,98,98,98,98,98,98,-108,98,-109,98,98,]),'DERLLAVE':([17,23,32,33,41,42,43,45,46,79,102,103,104,105,108,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,154,155,157,182,199,],[-76,-78,-77,-108,-106,-107,-110,108,-80,-109,-99,-100,-101,-102,-79,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-73,-103,-111,-104,-105,]),'INCE':([17,23,32,46,47,108,109,169,214,224,],[-76,-78,-77,-80,111,-79,160,111,111,160,]),'DECRE':([17,23,32,46,47,108,109,169,214,224,],[-76,-78,-77,-80,112,-79,161,112,112,161,]),'DP':([17,23,32,33,41,42,43,46,47,79,102,103,104,105,108,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,157,182,199,229,230,],[-76,-78,-77,-108,-106,-107,-110,-80,114,-109,-99,-100,-101,-102,-79,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,181,-73,-103,-111,-104,-105,238,239,]),'COMA':([17,23,29,32,33,41,42,43,46,74,79,102,103,104,105,106,107,108,127,128,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,154,155,157,164,177,179,182,183,193,194,199,209,222,],[-76,-78,76,-77,-108,-106,-107,-110,-80,-13,-109,-99,-100,-101,-102,158,-38,-79,176,-30,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-73,-103,-111,158,196,-12,-104,-37,-29,207,-105,-75,-74,]),'DERCOR':([17,23,32,33,41,42,43,46,48,49,51,52,53,54,55,56,57,58,60,79,102,103,104,105,106,107,108,114,116,117,118,119,120,121,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,154,155,157,174,175,178,180,182,183,199,200,208,215,216,217,218,221,225,226,227,228,233,234,235,237,241,242,243,247,248,249,250,254,256,257,260,261,],[-76,-78,-77,-108,-106,-107,-110,-80,115,-9,-15,-16,-17,-18,-19,-20,-21,-22,-24,-109,-99,-100,-101,-102,157,-38,-79,-39,-8,-14,-23,-25,-26,-27,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-73,-103,-111,192,-28,197,198,-104,-37,-105,-31,-72,225,226,-70,-66,-71,-57,-49,237,-65,-57,-52,-54,-64,249,-51,-53,-68,-50,-58,254,-56,-69,-67,261,-55,]),'scanf':([22,24,31,36,37,38,39,40,44,73,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,110,113,123,124,125,156,158,159,166,181,187,188,196,201,207,220,251,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,-59,-60,35,35,35,35,35,]),'NOT':([22,24,31,36,37,38,39,40,44,73,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,110,113,123,124,125,156,158,159,166,181,187,188,196,201,207,220,251,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,-59,-60,38,38,38,38,38,]),'BNOT':([22,24,31,36,37,38,39,40,44,73,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,110,113,123,124,125,156,158,159,166,181,187,188,196,201,207,220,251,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,-59,-60,39,39,39,39,39,]),'sizeof':([22,24,31,36,37,38,39,40,44,73,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,110,113,123,124,125,156,158,159,166,181,187,188,196,201,207,220,251,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,-59,-60,40,40,40,40,40,]),'DOUBLE':([22,24,31,36,37,38,39,40,44,73,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,110,113,123,124,125,156,158,159,166,181,187,188,196,201,207,220,251,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,-59,-60,41,41,41,41,41,]),'INTEGER':([22,24,31,36,37,38,39,40,44,73,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,110,113,123,124,125,156,158,159,166,181,187,188,196,201,207,220,251,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,-59,-60,42,42,42,42,42,]),'STR':([22,24,31,36,37,38,39,40,44,73,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,110,113,123,124,125,129,156,158,159,166,181,187,188,196,201,207,220,251,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,177,43,43,43,43,43,-59,-60,43,43,43,43,43,]),'for':([26,48,49,51,52,53,54,55,56,57,58,60,114,116,117,118,119,120,121,126,132,134,174,175,178,180,200,202,203,208,215,216,221,225,226,232,233,234,235,237,238,239,241,242,243,244,246,247,248,249,250,254,259,260,261,],[64,64,-9,-15,-16,-17,-18,-19,-20,-21,-22,-24,-39,-8,-14,-23,-25,-26,-27,64,64,64,64,-28,64,64,-31,64,64,-72,64,64,-71,-57,-49,64,-57,-52,-54,-64,64,64,64,-51,-53,64,64,64,-50,-58,64,-56,64,64,-55,]),'if':([26,48,49,51,52,53,54,55,56,57,58,60,114,116,117,118,119,120,121,126,132,134,174,175,178,180,200,202,203,208,215,216,221,225,226,232,233,234,235,236,237,238,239,241,242,243,244,246,247,248,249,250,254,259,260,261,],[65,65,-9,-15,-16,-17,-18,-19,-20,-21,-22,-24,-39,-8,-14,-23,-25,-26,-27,65,65,65,65,-28,65,65,-31,65,65,-72,65,65,-71,-57,-49,65,-57,-52,-54,245,-64,65,65,65,-51,-53,65,65,65,-50,-58,65,-56,65,65,-55,]),'while':([26,48,49,51,52,53,54,55,56,57,58,60,114,116,117,118,119,120,121,126,132,134,174,175,178,180,192,200,202,203,208,215,216,221,225,226,232,233,234,235,237,238,239,241,242,243,244,246,247,248,249,250,254,259,260,261,],[66,66,-9,-15,-16,-17,-18,-19,-20,-21,-22,-24,-39,-8,-14,-23,-25,-26,-27,66,66,66,66,-28,66,66,205,-31,66,66,-72,66,66,-71,-57,-49,66,-57,-52,-54,-64,66,66,66,-51,-53,66,66,66,-50,-58,66,-56,66,66,-55,]),'switch':([26,48,49,51,52,53,54,55,56,57,58,60,114,116,117,118,119,120,121,126,132,134,174,175,178,180,200,202,203,208,215,216,221,225,226,232,233,234,235,237,238,239,241,242,243,244,246,247,248,249,250,254,259,260,261,],[67,67,-9,-15,-16,-17,-18,-19,-20,-21,-22,-24,-39,-8,-14,-23,-25,-26,-27,67,67,67,67,-28,67,67,-31,67,67,-72,67,67,-71,-57,-49,67,-57,-52,-54,-64,67,67,67,-51,-53,67,67,67,-50,-58,67,-56,67,67,-55,]),'do':([26,48,49,51,52,53,54,55,56,57,58,60,114,116,117,118,119,120,121,126,132,134,174,175,178,180,200,202,203,208,215,216,221,225,226,232,233,234,235,237,238,239,241,242,243,244,246,247,248,249,250,254,259,260,261,],[68,68,-9,-15,-16,-17,-18,-19,-20,-21,-22,-24,-39,-8,-14,-23,-25,-26,-27,68,68,68,68,-28,68,68,-31,68,68,-72,68,68,-71,-57,-49,68,-57,-52,-54,-64,68,68,68,-51,-53,68,68,68,-50,-58,68,-56,68,68,-55,]),'printf':([26,48,49,51,52,53,54,55,56,57,58,60,114,116,117,118,119,120,121,126,132,134,174,175,178,180,200,202,203,208,215,216,221,225,226,232,233,234,235,237,238,239,241,242,243,244,246,247,248,249,250,254,259,260,261,],[70,70,-9,-15,-16,-17,-18,-19,-20,-21,-22,-24,-39,-8,-14,-23,-25,-26,-27,70,70,70,70,-28,70,70,-31,70,70,-72,70,70,-71,-57,-49,70,-57,-52,-54,-64,70,70,70,-51,-53,70,70,70,-50,-58,70,-56,70,70,-55,]),'goto':([26,48,49,51,52,53,54,55,56,57,58,60,114,116,117,118,119,120,121,126,132,134,174,175,178,180,200,202,203,208,215,216,221,225,226,232,233,234,235,237,238,239,241,242,243,244,246,247,248,249,250,254,259,260,261,],[71,71,-9,-15,-16,-17,-18,-19,-20,-21,-22,-24,-39,-8,-14,-23,-25,-26,-27,71,71,71,71,-28,71,71,-31,71,71,-72,71,71,-71,-57,-49,71,-57,-52,-54,-64,71,71,71,-51,-53,71,71,71,-50,-58,71,-56,71,71,-55,]),'break':([26,48,49,51,52,53,54,55,56,57,58,60,114,116,117,118,119,120,121,126,132,134,174,175,178,180,200,202,203,208,215,216,221,225,226,232,233,234,235,237,238,239,241,242,243,244,246,247,248,249,250,254,259,260,261,],[72,72,-9,-15,-16,-17,-18,-19,-20,-21,-22,-24,-39,-8,-14,-23,-25,-26,-27,72,72,72,72,-28,72,72,-31,72,72,-72,72,72,-71,-57,-49,72,-57,-52,-54,-64,72,72,72,-51,-53,72,252,253,-50,-58,72,-56,72,72,-55,]),'return':([26,48,49,51,52,53,54,55,56,57,58,60,114,116,117,118,119,120,121,126,132,134,174,175,178,180,200,202,203,208,215,216,221,225,226,232,233,234,235,237,238,239,241,242,243,244,246,247,248,249,250,254,259,260,261,],[73,73,-9,-15,-16,-17,-18,-19,-20,-21,-22,-24,-39,-8,-14,-23,-25,-26,-27,73,73,73,73,-28,73,73,-31,73,73,-72,73,73,-71,-57,-49,73,-57,-52,-54,-64,73,73,73,-51,-53,73,73,73,-50,-58,73,-56,73,73,-55,]),'default':([49,51,52,53,54,55,56,57,58,60,114,116,117,118,119,120,121,175,200,208,217,218,221,225,226,228,233,234,235,237,242,243,247,248,249,254,257,261,],[-9,-15,-16,-17,-18,-19,-20,-21,-22,-24,-39,-8,-14,-23,-25,-26,-27,-28,-31,-72,229,-66,-71,-57,-49,-65,-57,-52,-54,-64,-51,-53,-68,-50,-58,-56,-67,-55,]),'case':([49,51,52,53,54,55,56,57,58,60,114,116,117,118,119,120,121,175,200,204,208,217,218,221,225,226,228,233,234,235,237,242,243,247,248,249,254,257,261,],[-9,-15,-16,-17,-18,-19,-20,-21,-22,-24,-39,-8,-14,-23,-25,-26,-27,-28,-31,219,-72,219,-66,-71,-57,-49,-65,-57,-52,-54,-64,-51,-53,-68,-50,-58,-56,-67,-55,]),'else':([225,233,235,243,261,],[236,236,-54,-53,-55,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'s':([0,],[1,]),'lbody':([0,],[2,]),'body':([0,2,],[3,12,]),'TYPE':([0,2,19,20,26,36,48,76,122,126,132,134,174,178,180,201,202,203,215,216,232,238,239,241,244,246,247,250,259,260,],[4,4,27,27,69,101,69,133,170,69,69,69,69,69,69,170,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'decla':([0,2,26,48,122,126,132,134,174,178,180,201,202,203,215,216,232,238,239,241,244,246,247,250,259,260,],[6,6,59,59,168,59,59,59,59,59,59,213,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'ident':([4,5,22,24,26,27,31,36,37,38,39,40,44,48,69,71,73,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,110,113,122,123,124,125,126,132,133,134,156,158,159,166,170,174,176,178,180,181,196,201,202,203,207,215,216,220,232,238,239,241,244,246,247,250,251,259,260,],[15,16,33,33,47,74,33,33,33,33,33,33,33,47,128,130,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,169,33,33,33,47,47,179,47,33,33,33,33,15,47,193,47,47,33,33,214,47,47,33,47,47,33,47,47,47,47,47,47,47,47,33,47,47,]),'lacs':([15,33,47,128,169,214,],[21,79,109,21,109,224,]),'acs':([15,21,33,47,79,109,128,169,214,224,],[23,32,23,23,32,32,23,23,23,32,]),'lpam':([19,20,],[28,30,]),'lparam':([19,20,],[29,29,]),'exp':([22,24,31,36,37,38,39,40,44,73,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,110,113,123,124,125,156,158,159,166,181,196,201,207,220,251,],[34,45,78,100,102,103,104,105,107,131,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,162,107,171,172,173,182,183,184,186,199,209,210,222,231,255,]),'linst':([26,126,132,134,202,203,232,238,239,244,259,],[48,174,178,180,215,216,241,246,247,250,260,]),'inst':([26,48,126,132,134,174,178,180,202,203,215,216,232,238,239,241,244,246,247,250,259,260,],[49,116,49,49,49,116,116,116,49,49,116,116,49,49,49,116,49,116,116,116,49,116,]),'asig':([26,48,122,126,132,134,174,178,180,201,202,203,215,216,232,238,239,241,244,246,247,250,259,260,],[50,50,167,50,50,50,50,50,50,212,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'para':([26,48,126,132,134,174,178,180,202,203,215,216,232,238,239,241,244,246,247,250,259,260,],[51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'si':([26,48,126,132,134,174,178,180,202,203,215,216,232,238,239,241,244,246,247,250,259,260,],[52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'mientras':([26,48,126,132,134,174,178,180,202,203,215,216,232,238,239,241,244,246,247,250,259,260,],[53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'cual':([26,48,126,132,134,174,178,180,202,203,215,216,232,238,239,241,244,246,247,250,259,260,],[54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'call':([26,48,126,132,134,174,178,180,202,203,215,216,232,238,239,241,244,246,247,250,259,260,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'dow':([26,48,126,132,134,174,178,180,202,203,215,216,232,238,239,241,244,246,247,250,259,260,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'asg':([26,48,126,132,134,174,178,180,202,203,215,216,232,238,239,241,244,246,247,250,259,260,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'prin':([26,48,126,132,134,174,178,180,202,203,215,216,232,238,239,241,244,246,247,250,259,260,],[58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'tag':([26,48,126,132,134,174,178,180,202,203,215,216,232,238,239,241,244,246,247,250,259,260,],[60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'gotot':([26,48,126,132,134,174,178,180,202,203,215,216,232,238,239,241,244,246,247,250,259,260,],[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'brk':([26,48,126,132,134,174,178,180,202,203,215,216,232,238,239,241,244,246,247,250,259,260,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'ret':([26,48,126,132,134,174,178,180,202,203,215,216,232,238,239,241,244,246,247,250,259,260,],[63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'lex':([44,113,],[106,164,]),'lids':([69,],[127,]),'plex':([113,],[163,]),'para1':([122,],[166,]),'lexpr':([177,],[194,]),'para2':([201,],[211,]),'lcase':([204,],[217,]),'caso':([204,217,],[218,228,]),'def':([217,],[227,]),'lelsi':([225,],[233,]),'els':([225,233,],[234,242,]),'elsi':([225,233,],[235,243,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> s","S'",1,None,None,None),
  ('s -> lbody','s',1,'p_s_tag','gramaticaC.py',224),
  ('lbody -> lbody body','lbody',2,'p_lbody','gramaticaC.py',228),
  ('lbody -> body','lbody',1,'p_lbody','gramaticaC.py',229),
  ('body -> TYPE ID IZQPAR lpam DERPAR IZQCOR linst DERCOR','body',8,'p_body','gramaticaC.py',239),
  ('body -> TYPE main IZQPAR lpam DERPAR IZQCOR linst DERCOR','body',8,'p_body2','gramaticaC.py',245),
  ('body -> struct ident IZQCOR linst DERCOR PCOMA','body',6,'p_body_str','gramaticaC.py',250),
  ('body -> decla PCOMA','body',2,'p_body_decl','gramaticaC.py',254),
  ('linst -> linst inst','linst',2,'p_linst','gramaticaC.py',259),
  ('linst -> inst','linst',1,'p_linst','gramaticaC.py',260),
  ('lpam -> lparam','lpam',1,'p_lpam','gramaticaC.py',272),
  ('lpam -> <empty>','lpam',0,'p_lpam','gramaticaC.py',273),
  ('lparam -> lparam COMA TYPE ident','lparam',4,'p_lparam','gramaticaC.py',282),
  ('lparam -> TYPE ident','lparam',2,'p_lparam','gramaticaC.py',283),
  ('inst -> asig PCOMA','inst',2,'p_inst','gramaticaC.py',300),
  ('inst -> para','inst',1,'p_inst','gramaticaC.py',301),
  ('inst -> si','inst',1,'p_inst','gramaticaC.py',302),
  ('inst -> mientras','inst',1,'p_inst','gramaticaC.py',303),
  ('inst -> cual','inst',1,'p_inst','gramaticaC.py',304),
  ('inst -> call','inst',1,'p_inst','gramaticaC.py',305),
  ('inst -> dow','inst',1,'p_inst','gramaticaC.py',306),
  ('inst -> asg','inst',1,'p_inst','gramaticaC.py',307),
  ('inst -> prin','inst',1,'p_inst','gramaticaC.py',308),
  ('inst -> decla PCOMA','inst',2,'p_inst','gramaticaC.py',309),
  ('inst -> tag','inst',1,'p_inst','gramaticaC.py',310),
  ('inst -> gotot PCOMA','inst',2,'p_inst','gramaticaC.py',311),
  ('inst -> brk PCOMA','inst',2,'p_inst','gramaticaC.py',312),
  ('inst -> ret PCOMA','inst',2,'p_inst','gramaticaC.py',313),
  ('asg -> TYPE lids PCOMA','asg',3,'p_asg','gramaticaC.py',322),
  ('lids -> lids COMA ident','lids',3,'p_lids','gramaticaC.py',328),
  ('lids -> ident','lids',1,'p_lids','gramaticaC.py',329),
  ('call -> ident IZQPAR plex DERPAR PCOMA','call',5,'p_call','gramaticaC.py',341),
  ('brk -> break','brk',1,'p_breik','gramaticaC.py',346),
  ('ret -> return exp','ret',2,'p_ret','gramaticaC.py',351),
  ('ret -> return','ret',1,'p_ret','gramaticaC.py',352),
  ('plex -> lex','plex',1,'p_plex','gramaticaC.py',358),
  ('plex -> <empty>','plex',0,'p_plex','gramaticaC.py',359),
  ('lex -> lex COMA exp','lex',3,'p_lex','gramaticaC.py',367),
  ('lex -> exp','lex',1,'p_lex','gramaticaC.py',368),
  ('tag -> ident DP','tag',2,'p_tag','gramaticaC.py',378),
  ('gotot -> goto ident','gotot',2,'p_goto','gramaticaC.py',382),
  ('asig -> ident lacs IGUAL exp','asig',4,'p_asig','gramaticaC.py',386),
  ('asig -> ident IGUAL exp','asig',3,'p_asig','gramaticaC.py',387),
  ('asig -> ident lacs INCE','asig',3,'p_asig_Incre','gramaticaC.py',394),
  ('asig -> ident INCE','asig',2,'p_asig_Incre','gramaticaC.py',395),
  ('asig -> ident lacs DECRE','asig',3,'p_asig_decre','gramaticaC.py',402),
  ('asig -> ident DECRE','asig',2,'p_asig_decre','gramaticaC.py',403),
  ('decla -> TYPE ident lacs IGUAL exp','decla',5,'p_declara','gramaticaC.py',410),
  ('decla -> TYPE ident IGUAL exp','decla',4,'p_declara','gramaticaC.py',411),
  ('mientras -> while IZQPAR exp DERPAR IZQCOR linst DERCOR','mientras',7,'p_while','gramaticaC.py',418),
  ('dow -> do IZQCOR linst DERCOR while IZQPAR exp DERPAR PCOMA','dow',9,'p_dow','gramaticaC.py',421),
  ('si -> if IZQPAR exp DERPAR IZQCOR linst DERCOR lelsi els','si',9,'p_if','gramaticaC.py',425),
  ('si -> if IZQPAR exp DERPAR IZQCOR linst DERCOR els','si',8,'p_if','gramaticaC.py',426),
  ('lelsi -> lelsi elsi','lelsi',2,'p_lelif','gramaticaC.py',434),
  ('lelsi -> elsi','lelsi',1,'p_lelif','gramaticaC.py',435),
  ('elsi -> else if IZQPAR exp DERPAR IZQCOR linst DERCOR','elsi',8,'p_elif','gramaticaC.py',445),
  ('els -> else IZQCOR linst DERCOR','els',4,'p_else','gramaticaC.py',448),
  ('els -> <empty>','els',0,'p_else','gramaticaC.py',449),
  ('para -> for IZQPAR para1 exp PCOMA para2 DERPAR IZQCOR linst DERCOR','para',10,'p_for','gramaticaC.py',456),
  ('para1 -> asig PCOMA','para1',2,'p_for1','gramaticaC.py',461),
  ('para1 -> decla PCOMA','para1',2,'p_for1','gramaticaC.py',462),
  ('para2 -> asig','para2',1,'p_for2','gramaticaC.py',469),
  ('para2 -> decla','para2',1,'p_for2','gramaticaC.py',470),
  ('para2 -> exp','para2',1,'p_for2','gramaticaC.py',471),
  ('cual -> switch IZQPAR exp DERPAR IZQCOR lcase def DERCOR','cual',8,'p_switch','gramaticaC.py',478),
  ('lcase -> lcase caso','lcase',2,'p_lcase','gramaticaC.py',482),
  ('lcase -> caso','lcase',1,'p_lcase','gramaticaC.py',483),
  ('caso -> case ID DP linst break PCOMA','caso',6,'p_case','gramaticaC.py',488),
  ('caso -> case ID DP linst','caso',4,'p_case','gramaticaC.py',489),
  ('def -> default DP linst break PCOMA','def',5,'p_def','gramaticaC.py',493),
  ('def -> <empty>','def',0,'p_def','gramaticaC.py',494),
  ('prin -> printf IZQPAR STR lexpr DERPAR PCOMA','prin',6,'p_printf','gramaticaC.py',498),
  ('prin -> printf IZQPAR STR DERPAR PCOMA','prin',5,'p_printf2','gramaticaC.py',502),
  ('exp -> scanf IZQPAR DERPAR','exp',3,'p_readf','gramaticaC.py',506),
  ('lexpr -> lexpr COMA exp','lexpr',3,'p_lexp','gramaticaC.py',511),
  ('lexpr -> COMA exp','lexpr',2,'p_lexp','gramaticaC.py',512),
  ('ident -> ID','ident',1,'p_ids','gramaticaC.py',523),
  ('lacs -> lacs acs','lacs',2,'p_accesos','gramaticaC.py',530),
  ('lacs -> acs','lacs',1,'p_accesos','gramaticaC.py',531),
  ('acs -> IZQLLAVE exp DERLLAVE','acs',3,'p_array','gramaticaC.py',542),
  ('acs -> PUNTO ID','acs',2,'p_access','gramaticaC.py',548),
  ('exp -> exp SUMA exp','exp',3,'p_expresion','gramaticaC.py',556),
  ('exp -> exp RESTA exp','exp',3,'p_expresion','gramaticaC.py',557),
  ('exp -> exp MULTI exp','exp',3,'p_expresion','gramaticaC.py',558),
  ('exp -> exp DIV exp','exp',3,'p_expresion','gramaticaC.py',559),
  ('exp -> exp PORCENTAJE exp','exp',3,'p_expresion','gramaticaC.py',560),
  ('exp -> exp DIGUAL exp','exp',3,'p_expresion','gramaticaC.py',561),
  ('exp -> exp DESIGUAL exp','exp',3,'p_expresion','gramaticaC.py',562),
  ('exp -> exp MAYOR exp','exp',3,'p_expresion','gramaticaC.py',563),
  ('exp -> exp MENOR exp','exp',3,'p_expresion','gramaticaC.py',564),
  ('exp -> exp MAYORIGUAL exp','exp',3,'p_expresion','gramaticaC.py',565),
  ('exp -> exp MENORIGUAL exp','exp',3,'p_expresion','gramaticaC.py',566),
  ('exp -> exp AND exp','exp',3,'p_expresion','gramaticaC.py',567),
  ('exp -> exp OR exp','exp',3,'p_expresion','gramaticaC.py',568),
  ('exp -> exp BAND exp','exp',3,'p_expresion','gramaticaC.py',569),
  ('exp -> exp BOR exp','exp',3,'p_expresion','gramaticaC.py',570),
  ('exp -> exp BXOR exp','exp',3,'p_expresion','gramaticaC.py',571),
  ('exp -> exp BLEFT exp','exp',3,'p_expresion','gramaticaC.py',572),
  ('exp -> exp BRIGHT exp','exp',3,'p_expresion','gramaticaC.py',573),
  ('exp -> RESTA exp','exp',2,'p_expresion','gramaticaC.py',574),
  ('exp -> NOT exp','exp',2,'p_expresion','gramaticaC.py',575),
  ('exp -> BNOT exp','exp',2,'p_expresion','gramaticaC.py',576),
  ('exp -> sizeof exp','exp',2,'p_expresion','gramaticaC.py',577),
  ('exp -> IZQPAR exp DERPAR','exp',3,'p_expresion','gramaticaC.py',578),
  ('exp -> IZQPAR TYPE DERPAR exp','exp',4,'p_cast','gramaticaC.py',625),
  ('exp -> exp ASK exp DP exp','exp',5,'p_ternario','gramaticaC.py',631),
  ('exp -> DOUBLE','exp',1,'p_value_dou','gramaticaC.py',637),
  ('exp -> INTEGER','exp',1,'p_value_ent','gramaticaC.py',642),
  ('exp -> ident','exp',1,'p_value_id','gramaticaC.py',646),
  ('exp -> ident lacs','exp',2,'p_value_id2','gramaticaC.py',650),
  ('exp -> STR','exp',1,'p_value_str','gramaticaC.py',654),
  ('exp -> IZQCOR lex DERCOR','exp',3,'p_valur_arr','gramaticaC.py',658),
  ('TYPE -> int','TYPE',1,'p_type','gramaticaC.py',663),
  ('TYPE -> float','TYPE',1,'p_type','gramaticaC.py',664),
  ('TYPE -> char','TYPE',1,'p_type','gramaticaC.py',665),
  ('TYPE -> double','TYPE',1,'p_type','gramaticaC.py',666),
  ('TYPE -> void','TYPE',1,'p_type','gramaticaC.py',667),
]
